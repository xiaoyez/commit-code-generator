package <%= packageName%>;
<%forEach(Array.from(imports), i => {%>
import <%= i%>;<%});%>

/**
 * <%= comment%>
 */<%forEach(annotations, annotation => {%>
<%=JavaGeneratorUtils.generateAnnotation(annotation)%><%})%>
public class <%= typeName%> <%
    if (baseClass) {
%>extends <%= JavaGeneratorUtils.generateType(baseClass) %><%}%><%if (baseInterfaces && baseInterfaces.length > 0) {%> implements <%= baseInterfaces.map(baseInterface => JavaGeneratorUtils.generateType(baseInterface)).join(', ') %><%}%>{
    <%forEach(fields, field => {%>
    /**
     * <%= field.comment%>
     */<%forEach(field.annotations, annotation => {%>
    <%= JavaGeneratorUtils.generateAnnotation(annotation)%><%})%>
    <%=field.modifier%> <%=JavaGeneratorUtils.generateType(field.type)%> <%=field.name%>;
<%})%>
<%forEach(methods, method => {%>
    /**
     * <%=method.comment%>
<%forEach(method.parameters, param => {%>     * @param <%=param.name%> <%= param.comment || '' %><%})%>
     */<%forEach(method.annotations, annotation => {%>
    <%= JavaGeneratorUtils.generateAnnotation(annotation)%>
<%})%>    <%=method.modifer || 'public'%> <%=JavaGeneratorUtils.generateType(method.returnType)%> <%=method.name%>(<%forEach(method.parameters, (param, index) => {
        %><%forEach(param.annotations, annotation => {%><%= JavaGeneratorUtils.generateAnnotation(annotation) + ' '
%><%})%><%=JavaGeneratorUtils.generateType(param.type)%> <%=param.name%><%if (index < method.parameters.length - 1) {%>, <%}%><%})%>);
    {
        // TODO: implement
        return null;
    }

<%})%>
}