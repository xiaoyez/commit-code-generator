<template><%
if (actBtnList.length) { %>
  <el-row :gutter="10" class="mb8"><%
  forEach(actBtnList, actBtn => { %>
    <el-col :span="1.5">
      <el-button type="<%= actBtn.elType %>" plain icon="<%= actBtn.icon %>" size="small" <%
      if (actBtn.disabled) {
        %>:disabled="<%= actBtn.disabled %>>"<%
      } %>
        @click="<%- actBtn.click %>>" v-has-permi="['<%=
          permiPrefix %>:<%= actBtn.actPermi
        %>>']"><%= actBtn.text %>>
      </el-button>
    </el-col><%
  }) %>
  </el-row><%
} %>

  <right-toolbar v-model:showSearch="showSearch" @queryTable="getList"></right-toolbar>

  <el-table :data="<%= dataName %>" border stripe size="mini" v-loading="loading" @selection-change="handleSelectionChange">
    <el-table-column type="selection" width="55" align="center" />
    <el-table-column label="序号">
      <template #default="{ $index }: { $index: number }">
        {{ calcOrder($index) }}
      </template>
    </el-table-column><%
  forEach(tableColumns, col => { %>
    <el-table-column<%
    forEach(col.columnProps, propDef => {
      %> <%= propDef[0] %>="<%= propDef[1] %>"<%
    });
    if (col.type === TableColType.TEXT) {
    %>/><%
    } else {
    %>>
      <template #default="{ row }: { row: <%= dataTypeName %> }"><%
      if (col.type === TableColType.DICT) {
        // 考虑根据dictName在Script段定义响应式变量
        %>
        <dict-tag :options="getDict('<%= col.dictName %>').value" :value="row.<%= col.prop %>"/>
      </template><%
      }
      else if (col.type === TableColType.IMG) { %>
        <el-image v-if="row.<%= col.prop %>" style="height: 100px"
                  :src="fileUrl(row.<%= col.prop %>})"/>
      </template><%
      } %>
    </el-table-column><%
    }
  })%><%
  if (colActBtnList.length) { %>
    <el-table-column label="操作" width="100" fixed="right" align="center">
      <template #default="{ row }: { row: ${dataTypeName} }"><%
      forEach(colActBtnList, actBtn => { %>
        <el-button size="small" link icon="<%= actBtn.icon %>" @click="<%= actBtn.click %>"<%
        if (actBtn.actPermi) { %>
                   v-has-permi="['<%= permiPrefix %>:<%= actBtn.actPermi %>']"<%
        } %>><%= actBtn.text %>
        </el-button>
      })%>
      </template>
    </el-table-column><%
  }%>
  </el-table><%
if (tableDef.isPage) { %>
  <pagination v-show="totalRows > 0" :total="totalRows" v-model:page.sync="paging.pageNum"
              v-model:limit.sync="paging.pageSize" @pagination="getList"/><%
} %>
</template>

<script setup lang='ts'>
import {cloneDeep} from "lodash-es";
import {useTableIndex} from '@/utils';
import {fileUrl} from '@/utils/file';
import {COMMON_KEYS} from '@/constants/common';
<%if (tableDef.isPage) {
%>import type {IPagingParams} from '@/dataType/common';<%
}%>
<%let dataTypeDef = ApiUtils.getResultDataType(api);
if (dataTypeDef) {
    const dataTypeImportInfo = getTypeImportsFrom(dataTypeDef);
}%><%=generateImportLines(dataTypeImportInfo)%>
const {INJECT_QUERY_LIST_PARAM} = COMMON_KEYS;

const showSearch = defineModel<boolean>({
    default: true,
});

<%
let dataTypeDef = ApiUtils.getResultDataType(api);
let dataTypeStr = dataTypeDef ? tsTypeString(dataTypeDef) : 'unknown';
 %>
const { <%=dataName%> = [], totalRows = 0 } = defineProps<{
    <%=dataName%>: <%=dataTypeStr%>[];
    totalRows: number;
    loading: boolean
}>();

const selected = ref<<%=dataTypeStr%>[]>([]);
const notSingle = computed(() => selected.value.length !== 1);
const notMulti = computed(() => selected.value.length === 0);

function handleSelectionChange(selection: <%=dataTypeStr%>[]) {
    selected.value = selection;
}

const paging = inject<Ref<Required<IPagingParams>>>(INJECT_QUERY_LIST_PARAM, () => ref({
    pageSize: 10,
    pageNum: 1,
}), true);

const calcOrder = useTableIndex(paging as Ref<IPagingParams>);
</script>