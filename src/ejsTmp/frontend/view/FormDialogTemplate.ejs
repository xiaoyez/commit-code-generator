<template>
  <el-dialog :title="title" v-model="open" width="<%= width %>>" append-to-body>
    <el-form ref="formRef" :model="<%= modelName %>" :rules="rules" label-width="100px" :inline="true"><%
    forEach(items, itemDef => { %>
      <el-form-item label="<%= itemDef.label %>" prop="<%= itemDef.prop %>">
<%= compileEjsTmp(ejsTmp[itemDef.info.tmpName], itemDef.info, { indent: 8 }) %>
      </el-form-item><%
    }) %>
    </el-form>
    <div slot="footer" class="dialog-footer">
      <el-button type="primary" @click="submit">确 定</el-button>
      <el-button @click="cancel">取 消</el-button>
    </div>
  </el-dialog>
</template>

<script setup lang="ts">
import {ref} from "vue"
import {ElForm, type FormItemRule} from "element-plus"
import {useGlobalProperties} from "@/utils/component";
import {FORM_TYPE} from "@/constants/common";
import {RegexLib} from "@/utils/dataValidate";
<%= compileEjsTmp(ejsTmp.tsImportLinesTmp, importLines) %>
const title = ref("");
const open = ref(false);
const formType = ref<FORM_TYPE>(FORM_TYPE.ADD);
const formRef = ref<InstanceType<typeof ElForm> | null>(null);

const emit = defineEmits<{
    submitted: [];
}>();

const form = ref<Partial<<%= resultTypeName %>>>({});
const rules = ref({<%forEach(rules, ({prop, rule}) => { %>
    <%= prop %>: [<%
    if (rule.required) {%>
        {required: true, message: '<%= rule.message || "" %>', trigger: '<%= rule.trigger %>'},<%
    }
    if (rule.pattern) { %>
        {pattern: <%= rule.pattern %>, message:'<%= rule.patternMessage || "" %>', trigger: '<%= rule.trigger %>'},<%
    } %>
    ],<%
}) %>
} satisfies Partial<Record<keyof <%= resultTypeName %>>, FormItemRule[]>>);

const proxy = useGlobalProperties();

function onSubmitted() {
    emit('submitted');
}

/** 取消按钮 */
function cancel() {
    open.value = false;
    reset();
}

/** 表单重置 */
function reset() {
    form.value = {};
    formRef.value?.resetFields();
}

function openEditDialog(row: IMemberDTO) {
    reset();
    form.value = row;
    title.value = "<%= editApi.comment %>";
    getMember(row.id).then(response => {
        form.value = response.data;
        open.value = true;
        formType.value = FORM_TYPE.EDIT;
    });
}

function openAddDialog() {
    reset();
    title.value = "<%= addApi.comment %>";
    open.value = true;
    formType.value = FORM_TYPE.ADD;
}

function openInfoDialog(row: IMemberDTO) {
    reset();
    title.value = "<%= infoApi.comment.replace('获取','') %>";
    form.value = row;
    open.value = true;
    formType.value = FORM_TYPE.INFO;
}

/** 提交按钮 */
function submit() {
    formRef.value?.validate(valid => {
        if (valid) {
            if (formType.value === FORM_TYPE.EDIT) {
                <%= editApi.apiName %>(form.value).then(response => {
                    proxy.$modal.msgSuccess("修改成功");
                    open.value = false;
                    onSubmitted();
                });
            } else if (formType.value === FORM_TYPE.ADD) {
                <%= addApi.apiName %>(form.value).then(response => {
                    proxy.$modal.msgSuccess("新增成功");
                    open.value = false;
                    onSubmitted();
                });
            }
        }
    })
}

defineExpose({
    openEditDialog,
    openAddDialog,
    openInfoDialog,
});
</script>