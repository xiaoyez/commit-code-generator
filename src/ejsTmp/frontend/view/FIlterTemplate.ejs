<template>
  <el-form class="filter-form" :model="<%= modelName %>" ref="<%= refName %>" :inline="true" v-show="<%= vShowName %>"><%
  forEach(items, itemDef => { %>
    <el-form-item label="<%= itemDef.label %>" prop="<%= itemDef.prop %>">
<%= compileEjsTmp(ejsTmp[itemDef.info.tmpName], itemDef.info) %>
    </el-form-item><%
  }) %>
    <el-form-item>
      <el-button type="primary" icon="Search" size="small" @click="handleQuery">搜索</el-button>
      <el-button icon="Refresh" size="small" @click="resetQuery">重置</el-button>
    </el-form-item>
    <div v-if="noActBtn" class="tail-spacing"></div>
  </el-form>
</template>

<script setup lang="ts">
import {ref} from "vue";
import {ElForm} from "element-plus";
import {COMMON_KEYS} from "@/constants/common";
<%= compileEjsTmp(ejsTmp.tsImportLinesTmp, importLines) %>
const {INJECT_QUERY_LIST_PARAM} = COMMON_KEYS;

const <%= refName %> = ref<InstanceType<typeof ElForm>|null>(null);

defineProps<{
    <%= vShowName %>: boolean
    noActBtn?: boolean
}>();

const emit = defineEmits<{
    (e:'handleQuery', query: <%= queryTypeName %>): void,
}>();

<% // 以后可能要考虑default value需要给一些字段默认值的情况，现在默认所有字段都是可选
%>const ${modelName} = inject<Ref<<%= queryTypeName %>>>(INJECT_QUERY_LIST_PARAM, () => ref({}), true);<%
if (dateRanges.length) { %>
<% forEach(dateRanges, range => { %>
const <%= range.modelPath %> = ref<[string, string]>([]);

watch(<%= range.modelPath %>, ([start, end]) => {
    if (start && end) {
        <%= modelName %>.<%= range.modelPath %>Start = start;
        <%= modelName %>.<%= range.modelPath %>End = end;
    }
    else {
        <%= modelName %>.<%= range.modelPath %>Start = void 0;
        <%= modelName %>.<%= range.modelPath %>End = void 0;
    }
});<%})
} %>

function handleQuery() {
    emit('handleQuery', <%= modelName %>.value);
}

function resetQuery() {
    <%= refName %>.value?.resetFields();
    handleQuery();
}

</script>
