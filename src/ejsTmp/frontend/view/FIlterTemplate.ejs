<template>
  <el-form class="filter-form" :model="<%=modelName%>" ref="<%=refName%>" :inline="true" v-show="<%=vShowName%>">
<%forEach(items,itemDef=>{
%>    <el-form-item label="<%=itemDef.label%>" prop="<%=itemDef.prop%>"><%const defControl = itemDef.inputControl%>
      <%= compileEjsTmp(ejsTmp[itemDef.info.tmpName], itemDef.info) %>
    </el-form-item><%
})%>
    <el-form-item>
      <el-button type="primary" icon="Search" size="small" @click="handleQuery">搜索</el-button>
      <el-button icon="Refresh" size="small" @click="resetQuery">重置</el-button>
    </el-form-item>
    <div v-if="noActBtn" class="tail-spacing"></div>
  </el-form>
</template>

<script setup lang="ts">
import {ref} from "vue";
import {ElForm} from "element-plus";
import {COMMON_KEYS} from "@/constants/common";
const { INJECT_QUERY_LIST_PARAM } = COMMON_KEYS;

<%if(api.params){
%><%let importInfo = getTypeImportsFrom(api.params)
%><%=generateImportLines(importInfo)%><%}%>
const <%=refName%> = ref<InstanceType<typeof ElForm>|null>(null);
defineProps<{
    <%=vShowName%>: boolean
    noActBtn?: boolean
}>();
<%if(api.params?.type instanceof ObjectTypeDefinition) {
%>const emit = defineEmits<{
    (e:'handleQuery', query: <%=api.params.type.className%>): void,
}>();
const ${modelName} = inject<Ref<<%=api.params.type.className%>>>(INJECT_QUERY_LIST_PARAM, () => ref<<%=api.params.type.className%>>({}), true);<%
}%>

</script>